.only-default: &only-default
  only:
    - master
    - branches
    - merge_requests
    - tags

stages:
  - test
  - build
  - deploy

mocha-test:
  <<: *only-default
  stage: test
  image: node:14
  script:
    - echo "Running tests"
    - npm --prefix ./web install ./web
    - npm --prefix ./web install mocha
    - npm --prefix ./web run test

docker-build:
  stage: build
  image: docker:19.03.15
  services:
    - docker:19.03.15-dind
  script:
    - docker build -t "$ECR_REPO" -f ./web/Dockerfile ./web
    - docker tag "$ECR_REPO" "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$CI_COMMIT_SHA"
    - docker push "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$CI_COMMIT_SHA"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "master"'

deploy_staging:
  stage: deploy
  image:
    name: bitnami/kubectl:1.18
    entrypoint: [""]
  before_script:
    - context=$(kubectl config current-context)
    - if [ $context -dne "arn:aws:eks:$AWS_REGION:$AWS_ACCOUNT_ID:cluster/$ECR_REPO-web" ]; then echo "context should be web" && exit 1; fi;
  script:
    - kubectl set image deployment/node-deployment $WEB_CONTAINER=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$CI_COMMIT_SHA
    - kubectl rollout restart deployment/node-deployment
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual

workflow:
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /-doc$/
      when: never
    - when: always

stages:
  - test
  - build
  - deploy

mocha-test:
  tags:
    - test
  stage: test
  image: node:14
  script:
    - echo "Running tests"
    - npm --prefix ./web install ./web
    - npm --prefix ./web install mocha
    - npm --prefix ./web run test
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH != null'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_TAG != null'

docker-build:
  tags:
    - docker
    - dind
  stage: build
  image: docker:19.03.15
  services:
    - docker:19.03.15-dind
  script:
    - docker build -t "$ECR_REPO" -f ./web/Dockerfile ./web
    - docker tag "$ECR_REPO" "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$CI_COMMIT_SHA"
    - docker push "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$CI_COMMIT_SHA"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "master"'

deploy_staging:
  tags:
    - cluster
    - kubernetes
  stage: deploy
  image:
    name: gcr.io/cloud-builders/kubectl:latest
  script:
    - cluster="arn:aws:eks:$AWS_REGION:$AWS_ACCOUNT_ID:cluster/$EKS_CLUSTER"
    - kubectl config set-cluster $cluster --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --token="$KUBE_TOKEN"
    - kubectl config set-context $cluster --cluster=$cluster --user=admin
    - kubectl config use-context $cluster
    - kubectl set image deployment/node-deployment $WEB_CONTAINER=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$CI_COMMIT_SHA --namespace=default
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "master"'
